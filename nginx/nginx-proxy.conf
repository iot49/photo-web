user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 16;
}

http {
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Logging format
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';

    access_log /var/log/nginx/access.log main;

    # Basic settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Cache settings for photos
    proxy_cache_path /var/cache/nginx/photos levels=1:2 keys_zone=photos_cache:10m max_size=1g inactive=60m use_temp_path=off;

    server {
        listen 80;
        server_name _;

        # Cache configuration for image endpoints (highest priority)
        location ~ ^/photos/api/photos/([^/]+)/img(.*)$ {
            proxy_pass http://photos:8000/api/photos/$1/img$2;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Enable caching for images
            proxy_cache photos_cache;
            proxy_cache_valid 200 302 1h;
            proxy_cache_valid 404 1m;
            proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
            proxy_cache_lock on;
            proxy_cache_key "$scheme$request_method$host$request_uri";
            
            # Add cache status header for debugging
            add_header X-Cache-Status $upstream_cache_status;
            
            # Cache headers
            expires 1h;
            add_header Cache-Control "public, immutable";
        }

        # All other photos endpoints (no caching) - strip /photos prefix
        location /photos/ {
            proxy_pass http://photos:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Disable caching for non-image endpoints
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Proxy to auth service (no caching)
        location /auth/ {
            proxy_pass http://auth:8000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto https;
            
            # Disable caching for auth endpoints
            proxy_cache off;
            add_header Cache-Control "no-cache, no-store, must-revalidate";
        }

        # Health check endpoint
        location /nginx-health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }

        # Redirect /favicon.ico to SVG version
        location = /favicon.ico {
            return 302 https://$host/static/favicon.svg;
        }
        
        # Also handle direct SVG favicon requests
        location = /favicon.svg {
            return 302 https://$host/static/favicon.svg;
        }

        # Redirect root to /ui
        location = / {
            return 302 /ui/;
        }

        # SPA routing for ui (handle client-side routes)
        location /ui/ {
            root /usr/share/nginx/html;
            index index.html;
            try_files $uri $uri/ /ui/index.html;
        }

        # Static content served from /usr/share/nginx/html (lowest priority)
        location / {
            root /usr/share/nginx/html;
            index index.html index.htm;
            try_files $uri $uri/ =404;
        }

    }
}